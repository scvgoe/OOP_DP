개발자가 반드시 정복해야 할 객체지향과 디자인 패턴

Chapter 02 객체 지향
1. 절차 지향과 객체 지향
1.1 절차 지향
소프트웨어를 구현한다는 것은 결국 소프트웨어를 구성하는 데이터와 데이터를
조작하는 코드를 작성하는 것. 이렇게 데이터를 조작하는 코드를 프로시져나 함수의
형태로 분리하여, 프로시져로 프로그램을 구성하는 기법을 절차 지향 (Procedural
Oriented) 프로그래밍이라 한다.

* 절차 지향이라는 말 때문에 뭔가 순서에 따라 프로그래밍하는 방식을 생각할 수
* 있으나 단순히 프로시져라는 말을 번역하면서 생겨난 말

다수의 프로시저들이 데이터를 공유하는 방식으로 만들어지기 때문에, 절차 지향
프로그램은 자연스럽게 데이터를 중심으로 구현하게 된다.

최초에는 절차 지향적으로 코드를 구현하기 쉽지만 프로그램의 규모가 커져서 데이터
종류가 증가하고 이를 사용하는 프로시져 또한 증가하면 다음의 문제들이 발생할 수
있다.
- 데이터 타입이나 의미를 변경해야 할 때, 함께 수정해야 하는 프로시저가 증가
- 같은 데이터를 프로시저들이 서로 다른 의미로 사용하는 경우가 발생

1.2 객체 지향
데이터와 관련된 프로시져를 객체라는 단위로 묶는다.
프로그램의 규모가 작을 때에는 절차 지향보다 더 복잡한 구조를 갖게 된다.
